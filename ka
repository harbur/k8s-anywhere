#!/bin/bash

set -o errexit
set -o pipefail

function print_usage {
    cat << EOF
ka is a utility for launching Kubernetes Anywhere

Usage: ka [command]

Available commands:
  up       Starts Kubernetes in the Docker host currently configured with your local docker command
  stop     Stops a previously started Kubernetes cluster keeping cluster info
  down     Tear down a previously started Kubernetes cluster deleting permanently cluster info
  restart  Restart Kubernetes
EOF
}

check_docker_for_mac() {
  local -r docker_for_mac_version="${HOME}/Library/Containers/com.docker.docker/Data/database/com.docker.driver.amd64-linux/schema-version"
  [ "$(uname)" = "Darwin" ] \
    && [ -f "${docker_for_mac_version}" ]
}

check_docker_local() {
  [ -S /var/run/docker.sock ] \
    && docker --host="unix:///var/run/docker.sock" info &> /dev/null
  ## TODO: figure out if sudo is needed
}

start_srelay() {
  stop_srelay
  docker run --net=weave --name ka_srelay -d -p 1080:1080 harbur/srelay:20150703-9461835
}

stop_srelay() {
  docker rm -f ka_srelay 2> /dev/null || true
}

if check_docker_local && check_docker_for_mac ; then
  hostname="docker"
elif check_docker_local ; then
  hostname="$(hostname)"
else
  exit 1
fi

mode=$1
version="${2:-v1.2}"

case "$mode" in
  up)
    weave status || weave launch
    ## Currently Weave Net doesn't persist DNS records
    weave expose -h "${hostname}.weave.local"
    if ! check_docker_for_mac ; then
      eval "$(weave env)"
    fi
    docker run \
      --volume="/:/rootfs" \
      --volume="/var/run/weave/weave.sock:/docker.sock" \
        "weaveworks/kubernetes-anywhere:toolbox-${version}" \
          setup-single-node
    #
    docker run \
      --volume="/var/run/weave/weave.sock:/docker.sock" \
        "weaveworks/kubernetes-anywhere:toolbox-${version}" \
          compose -p kube up -d
    # Create DNS
    docker run --net=weave --dns=172.17.0.1 \
      --volumes-from=kube-toolbox-pki weaveworks/kubernetes-anywhere:toolbox-${version} \
      kubectl create -f addons-v1.2.yaml || true
    # Start SOCKS relay to get Pod & Services connectivity
    start_srelay
  ;;
  start)
    weave status || weave launch
    ## Currently Weave Net doesn't persist DNS records
    weave expose -h "${hostname}.weave.local"
    if ! check_docker_for_mac ; then
      eval "$(weave env)"
    fi
    docker run \
      --volume="/:/rootfs" \
      --volume="/var/run/weave/weave.sock:/docker.sock" \
        "weaveworks/kubernetes-anywhere:toolbox-${version}" \
          setup-single-node
    #
    docker run \
      --volume="/var/run/weave/weave.sock:/docker.sock" \
        "weaveworks/kubernetes-anywhere:toolbox-${version}" \
          compose -p kube up -d
    # Start SOCKS relay to get Pod & Services connectivity
    start_srelay
  ;;
  reset)
    docker run \
      --volume="/:/rootfs" \
      --volume="/var/run/docker.sock:/docker.sock" \
        "weaveworks/kubernetes-anywhere:toolbox-${version}" \
          compose -p kube down || true
    docker run \
      --volume="/:/rootfs" \
      --volume="/var/run/docker.sock:/docker.sock" \
        "weaveworks/kubernetes-anywhere:toolbox-${version}" \
          reset-single-node
  ;;
  down)
    docker run \
      --volume="/:/rootfs" \
      --volume="/var/run/docker.sock:/docker.sock" \
        "weaveworks/kubernetes-anywhere:toolbox-${version}" \
          compose -p kube down
    weave stop
  ;;
  stop)
    docker run \
      --volume="/:/rootfs" \
      --volume="/var/run/docker.sock:/docker.sock" \
        "weaveworks/kubernetes-anywhere:toolbox-${version}" \
          compose -p kube stop
  ;;
  *)
    print_usage
  ;;
esac
